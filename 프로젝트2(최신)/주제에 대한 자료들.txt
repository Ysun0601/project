1. 모의 C2 서버 구축
목표: 모의 C2 서버를 생성하여 악성 도메인과의 통신 및 네트워크 활동을 시뮬레이션

C2 서버 생성 (EC2) - 서버를 악성 도메인 역할로 설정(ex. c2-test.example.com)
C2 클라이언트 스크립트 작성 - Python 스크립트로 주기적으로 C2 서버에 요청을 보내는 클라이언트 생성
 - 요청 데이터 : 도메인(c2-test.example.com)
                    포트(8080) 또는 HTTP/HTTPS 기본 포트
                    트래픽 데이터를 다양화(정상 요청과 악성 요청 혼합
출력 데이터 - 네트워크 트래픽 로그 (소스 IP, 대상 IP, 프로토콜, 포트)
                  DNS 요청 로그 (악성 도메인 요청 포함)
------------------------------------------------------------------------------------------------------------------
별도의 공격으로 구분해서 진행
* 설명 - C2 서버와의 통신 시도와 악성 도메인과의 통신 탐지를 서로 별도의 공격 시나리오로 처리
        - C2 서버 통신 시도는 네트워크 트래픽 탐지(VPC Flow Logs) 중심으로 다루고  
        - 악성 도메인 탐지는 DNS 요청(Route 53 Logs)중심으로 다룸
* 장점 - 각 공격 유형의 탐지 및 대응 프로세스를 분리하여 보다 세밀한 분석 가능
        - 탐지 시스템의 역할을 명확히 분리할 수 있어 GuardDuty, Security Hub등의 동작을 구체적으로 확인 가능
        - 각각의 위협에 대해 독립적인 탐지 및 대응 논리를 구축하여 더 다양한 시뮬레이션 가능
* 단점 - 두 시스템이 탐지하는 이벤트가 중복될 가능성이 있음
-----------------------------------------------------------------------------------------------------------------
C2 서버를 중심으로 통합 처리
* 설명 - 모의 C2 서버를 중심으로, 통신 시도와 악성 도메인 탐지를 하나의 공격 시나리오로 통합 처리
        - C2 서버로의 통신 시도가 네트워크 트래픽과 DNS 요청 양쪽에서 동시에 탐지되도록 설정
* 장점 - 통합적인 탐지 흐름을 구현하여 네트워크 및 DNS 로그를 결합 분석 가능
        - GuardDuty와 Security Hub에서 한 사건으로 연계된 위협 데이터를 확인 가능
        - 탐지 - 대응 흐름을 명확히 시연 가능
* 단점 - 두 위협이 동시에 탐지될 때 구체적인 원인(네트워크 트래픽 기반과 DNS 요청 기반)을 명확히 구분하기 어려움
         - 악성 도메인이 아닌 단순 트래픽 비정상으로 인해 C2 통신 탐지 결과가 오탐으로 이어질 가능성

목표와 일치 - 시뮬레이션의 목표는 C2 통신 탐지 및 차단이므로, C2 서버로의 통신시도와 악성 도메인 탐지를 하나의
                  흐름으로 시뮬레이션하는 것이 간결
AWS 서비스 활용 최적화 - GuardDuty와 Security Hub는 데이터 소스(VPC Flow Logs, DNS Logs) 에서 연계된 
                                 위협 데이터를 결합 분석하도록 설계
시연 용이성 - 통합된 흐름으로 C2 통신 시도와 악성 도메인 탐지를 동시에 보여주면, 프로젝트 결과물이 명확해짐
------------------------------------------------------------------------------------------------------------------------
통합 처리시 시나리오
모의 C2 서버 동작
* 설정 : C2 서버(악성 도메인 역할) 생성 : C2-test-example.com
          클라이언트가 C2 서버에 주기적으로 통신 시도
* 탐지 대상 : DNS 요청(Route 53 Logs) - c2-test.example.com에 대한 요청
                 네트워크 트래픽(VPC Flow Logs) - C2서버와의 통신 세부 정보(소스, IP 대상, IP, 포트)
* 탐지 흐름
(1) 클라이언트가 c2-test.example.com에 DNS 요청을 보냄(악성 도메인 요청)
(2) C2 서버와의 네트워크 트래픽이 발생(비정상 트래픽)
(3) GuardDuty가 DNS 요청 및 네트워크 트래픽 분석 후 C2 통신 시도로 탐지
(4) Security Hub에서 위협 이벤트를 통합 관리
(5) 자동화된 대응 - C2 서버와 통신한 클라이언트 인스턴스를 격리, C2 서버의 IP를 AWS WAF 블록리스트에 추가
--------------------------------------------------------------------------------------------------------------------
<구체적인 위협 구분 방법>
1. 위협 탐지 데이터의 상관분석
: 네트워크 트래픽과 DNS 요청은 서로 다른 특성을 가지므로, 두 데이터 소스를 별도로 분석한 후, 상관분석을 통해 위협을
구체화
1-1. 네트워크 트래픽 기반 탐지 - VPC Flow Logs를 통해, C2 서버와 통신하려는 클라리언트의 IP 프로토콜, 포트 정보 탐지
                                       - C2 서버와의 비정상적인 통신이 반복되거나, 데이터 유출 시도를 식별
1-2. DNS 요청 기반 탐지 - Route 53 Logs를 통해 클라이언트가 C2 서버(악성 도메인)의 IP를 요청했는지 확인
                               - 악성 도메인 요청 빈도가 비정상적으로 높거나 Threat Intelligence에서 악성으로 보고된 경우
1-3. 상관분석 - 두 데이터 소스에서 발생한 이벤트를 비교 - 동일한 소스 IP가 악성 도메인 요청과 C2 통신 시도에 모두 등장했는지
                  - Threat Intelligence를 통해 도메인/IP가 악성인지 여부를 추가 확인

2. 위협 유형별 구체적 구분 기준
2-1. DNS 요청만 탐지된 경우
위협 해석: 클라이언트가 C2 서버의 IP 주소를 얻기 위해 DNS 요청을 보냈으나, 실제 통신은 이루어지지 않음.
가능성: 초기 탐색 단계의 공격 시도.
          단순히 잘못된 DNS 요청(오탐)일 가능성.
대응 방안: 악성 도메인 요청 빈도를 모니터링하고 Threat Intelligence와 대조하여 신뢰도 확인.
2-2. 네트워크 트래픽만 탐지된 경우
위협 해석: 클라이언트가 C2 서버와 직접 통신(예: 명령 전송, 데이터 유출).
가능성: 도메인/IP 정보가 Threat Intelligence에 포함되지 않은 새로운 위협.
대응 방안: VPC Flow Logs를 분석하여, 비정상적인 트래픽 패턴 및 통신 내용 확인.
             IP를 Threat Intelligence에 업데이트.
2-3. DNS 요청과 네트워크 트래픽 모두 탐지된 경우
위협 해석: 클라이언트가 악성 도메인(C2 서버)을 요청하고, 실제로 해당 서버와 통신.
가능성: 위협이 높은 실제 공격 사례(C2 통신).
대응 방안: Threat Intelligence 데이터베이스와 대조해 도메인 및 IP가 악성인지 확인.
              신뢰도가 높을 경우, Lambda를 통해 자동 대응(예: 클라이언트 격리, WAF 업데이트).


2. 보안 모니터링
목표 : 모의 C2 서버와 클라이언트 간의 통신 데이터를 수집
수집해야 할 데이터
2-1. Route 53 Logs : DNS 요청 추적 및 악성 도메인(c2-test.example.com) 요청 탐지
수집해야 할 데이터 : 요청한 도메인, 요청한 소스 IP 주소, 요청 시간 
2-2. VPC Flow Logs : 모의 C2 서버와 클라이언트 간의 네트워크 트래픽 기록
수집해야 할 데이터 : 소스/목적지 IP 주소, 프로토콜 및 포트, 수신/송신 바이트 크기
2-3. CloudTrail Logs : API 호출 및 IAM 비정상 엑세스 탐지
수집해야 할 데이터 : 호출된 API 이름, 요청한 IAM 사용자, 호출 소스 IP

3. 보안 탐지
목표 : 수집된 데이터를 바탕으로 C2 통신 시도를 탐지
탐지해야 할 데이터
3-1. Amazon GuardDuty : VPC Flow Logs, Route 53 Logs, CloudTrail Logs 분석
탐지 결과 : 악성 돔인 요청(DNS), 비정상적인 네트워크 트래픽(C2 통신 시도), 비정상적인 API 호출(IAM 변경)
3-2. AWS Security Hub : GuardDuty 탐지 결과와 Threat Intelligence 연계로 위협 심각도 평가

4. 보안 로그 분석
목표 : Athena와 Glue를 사용하여 이상 트래픽 패턴 분석
분석해야 할 데이터
4-1. S3 저장소 : 수집된 로그 데이터 - DNS Logs, VPC Flow Logs, CloudTrail Logs
4-2. Glue ETL 프로세스 : 데이터를 Athena에서 분석 가능하도록 변환 및 적재
4-3. Athena 분석 쿼리 작성 : 이상 트래픽 패턴 분석 - 특정 악성 도메인으로의 다수 요청 식별, 특정 IP로의 비정상적 트래픽 탐지

5. 데이터 시각화
목표 : OpenSearch 대시보드를 통해 탐지 및 분석 결과 시각화
5-1. OpenSearch 데이터 인덱싱 - Glue에서 적재된 데이터를 OpenSearch에 인덱싱, VPC Flow Logs 및 DNS Logs 연결
5-2. 대시보드 구성 - 주요 악성 도메인 요청빈도, 시간대별 C2 통신 시도, 감염된 인스턴스 목록

6. 보안 대응 자동화
목표 : 탐지된 위협 이벤트에 대해 자동으로 대응 조치 수행
6-1. Amazon EventBridge : GuardDuty의 "High Severity" 이벤트를 Lambda로 전달
6-2. AWS Lambda : 실시간 보안 조치 수행
